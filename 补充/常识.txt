 位：计算机的数据储存的最小单位    1101 0010 是一个8位的字节
 字节： 8位 就是 1个字节
      ascll 1字节     
      utf-8 字节是变字节，一般占2到3个字节，ascll还是1字节
      gbk 汉字2字节 ascll字符1字节

      一个64位的操作系统中，一个指针是8字节


堆与栈的基本常识：
堆是倒过的树，参考连接 ： https://mp.weixin.qq.com/s/cq2EhVtOTzTVpNpLDXfeJg
堆类似于纸箱子，用作局部变量和参数

栈区(stack)：由编译器自动分配或者释放  存放函数的参数值  局部变量等   编译器释放
堆区(heap): 堆区是向上增长的用于分配程序员申请的内存空间        程序释放
全局区(静态区static):全局变量和静态变量的存储是放在一块的,
                   初始化的全局变量和静态变量在一块区域，
                   未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。     系统释放
文字常量区():       常量字符串      系统释放
静态代码区():  
例子：
main.cpp 
int a = 0; 全局初始化区 
char *p1; 全局未初始化区 
main() 
{ 
int b; 栈 
char s[] = "abc"; 栈 
char *p2; 栈 
char *p3 = "123456"; 123456\0在常量区，p3在栈上。 
static int c =0； 全局（静态）初始化区 
p1 = (char *)malloc(10);  堆        //malloc() 向系统申请10个字节的存储空间
p2 = (char *)malloc(20);  堆 
}





